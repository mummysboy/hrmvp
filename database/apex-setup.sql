/**
 * College HR System - APEX Database Setup
 * Complete schema, packages, and data model
 * 
 * Run this script in your APEX workspace database
 */

-- =============================================================================
-- TABLES
-- =============================================================================

-- Requests Table (Main HR requests)
CREATE TABLE requests (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR2(255) NOT NULL,
  type VARCHAR2(50) NOT NULL,
  description VARCHAR2(2000),
  department VARCHAR2(100),
  status VARCHAR2(30) DEFAULT 'DRAFT',
  salary VARCHAR2(100),
  start_date DATE,
  duration VARCHAR2(100),
  employee_name VARCHAR2(255),
  current_position VARCHAR2(255),
  promoted_to VARCHAR2(255),
  appointee_name VARCHAR2(255),
  appointment_position VARCHAR2(255),
  notes VARCHAR2(2000),
  created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  created_by VARCHAR2(100) DEFAULT USER,
  updated_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  updated_by VARCHAR2(100) DEFAULT USER
);

-- Request Approval Steps
CREATE TABLE request_steps (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  request_id NUMBER NOT NULL REFERENCES requests(id),
  action VARCHAR2(20),
  approved_by VARCHAR2(100),
  approved_at TIMESTAMP,
  approval_comment VARCHAR2(1000)
);

-- Audit Log
CREATE TABLE audit_log (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  entity_type VARCHAR2(50),
  entity_id NUMBER,
  action VARCHAR2(100),
  changed_by VARCHAR2(100),
  changed_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  details VARCHAR2(2000)
);

-- Create Indexes
CREATE INDEX idx_requests_status ON requests(status);
CREATE INDEX idx_requests_type ON requests(type);
CREATE INDEX idx_requests_department ON requests(department);
CREATE INDEX idx_requests_created ON requests(created_at DESC);
CREATE INDEX idx_request_steps_request ON request_steps(request_id);
CREATE INDEX idx_audit_entity ON audit_log(entity_type, entity_id);

-- =============================================================================
-- VIEWS (For APEX)
-- =============================================================================

-- Dashboard Stats View
CREATE OR REPLACE VIEW v_dashboard_stats AS
SELECT 
  (SELECT COUNT(*) FROM requests WHERE status = 'PENDING_REVIEW') AS pending_count,
  (SELECT COUNT(*) FROM requests WHERE status = 'APPROVED') AS approved_count,
  (SELECT COUNT(*) FROM requests WHERE status = 'DRAFT') AS draft_count,
  (SELECT COUNT(*) FROM requests) AS total_count
FROM dual;

-- All Requests View (for list page)
CREATE OR REPLACE VIEW v_requests AS
SELECT 
  id,
  title,
  type,
  department,
  status,
  description,
  created_by,
  created_at,
  updated_at
FROM requests
ORDER BY created_at DESC;

-- Pending Approvals View
CREATE OR REPLACE VIEW v_pending_approvals AS
SELECT 
  id,
  title,
  type,
  department,
  description,
  created_by,
  created_at
FROM requests
WHERE status = 'PENDING_REVIEW'
ORDER BY created_at DESC;

-- Recent Activity View
CREATE OR REPLACE VIEW v_recent_activity AS
SELECT 
  id,
  title,
  status,
  updated_at,
  (CASE 
    WHEN status = 'DRAFT' THEN 'Saved as draft'
    WHEN status = 'PENDING_REVIEW' THEN 'Submitted for review'
    WHEN status = 'APPROVED' THEN 'Approved'
    WHEN status = 'REJECTED' THEN 'Rejected'
    ELSE status
  END) AS action
FROM requests
ORDER BY updated_at DESC;

-- =============================================================================
-- PACKAGES
-- =============================================================================

CREATE OR REPLACE PACKAGE pkg_requests IS
  PROCEDURE create_request(
    p_title IN VARCHAR2,
    p_type IN VARCHAR2,
    p_department IN VARCHAR2,
    p_description IN VARCHAR2,
    p_salary IN VARCHAR2 DEFAULT NULL,
    p_start_date IN DATE DEFAULT NULL,
    p_duration IN VARCHAR2 DEFAULT NULL,
    p_employee_name IN VARCHAR2 DEFAULT NULL,
    p_current_position IN VARCHAR2 DEFAULT NULL,
    p_promoted_to IN VARCHAR2 DEFAULT NULL,
    p_appointee_name IN VARCHAR2 DEFAULT NULL,
    p_appointment_position IN VARCHAR2 DEFAULT NULL,
    p_notes IN VARCHAR2 DEFAULT NULL,
    p_request_id OUT NUMBER
  );

  PROCEDURE submit_request(p_request_id IN NUMBER);
  PROCEDURE approve_request(p_request_id IN NUMBER, p_approver IN VARCHAR2, p_comment IN VARCHAR2 DEFAULT NULL);
  PROCEDURE reject_request(p_request_id IN NUMBER, p_rejecter IN VARCHAR2, p_reason IN VARCHAR2 DEFAULT NULL);
  PROCEDURE get_request(p_request_id IN NUMBER, p_result OUT SYS_REFCURSOR);
  PROCEDURE get_all_requests(p_result OUT SYS_REFCURSOR);
END pkg_requests;
/

CREATE OR REPLACE PACKAGE BODY pkg_requests IS

  PROCEDURE create_request(
    p_title IN VARCHAR2,
    p_type IN VARCHAR2,
    p_department IN VARCHAR2,
    p_description IN VARCHAR2,
    p_salary IN VARCHAR2 DEFAULT NULL,
    p_start_date IN DATE DEFAULT NULL,
    p_duration IN VARCHAR2 DEFAULT NULL,
    p_employee_name IN VARCHAR2 DEFAULT NULL,
    p_current_position IN VARCHAR2 DEFAULT NULL,
    p_promoted_to IN VARCHAR2 DEFAULT NULL,
    p_appointee_name IN VARCHAR2 DEFAULT NULL,
    p_appointment_position IN VARCHAR2 DEFAULT NULL,
    p_notes IN VARCHAR2 DEFAULT NULL,
    p_request_id OUT NUMBER
  ) IS
  BEGIN
    INSERT INTO requests (
      title, type, department, description, status,
      salary, start_date, duration,
      employee_name, current_position, promoted_to,
      appointee_name, appointment_position,
      notes, created_by
    ) VALUES (
      p_title, p_type, p_department, p_description, 'DRAFT',
      p_salary, p_start_date, p_duration,
      p_employee_name, p_current_position, p_promoted_to,
      p_appointee_name, p_appointment_position,
      p_notes, USER
    ) RETURNING id INTO p_request_id;
    
    COMMIT;
  END create_request;

  PROCEDURE submit_request(p_request_id IN NUMBER) IS
  BEGIN
    UPDATE requests
    SET status = 'PENDING_REVIEW',
        updated_at = SYSTIMESTAMP,
        updated_by = USER
    WHERE id = p_request_id;
    COMMIT;
  END submit_request;

  PROCEDURE approve_request(
    p_request_id IN NUMBER,
    p_approver IN VARCHAR2,
    p_comment IN VARCHAR2 DEFAULT NULL
  ) IS
  BEGIN
    INSERT INTO request_steps (request_id, action, approved_by, approved_at, approval_comment)
    VALUES (p_request_id, 'APPROVED', p_approver, SYSTIMESTAMP, p_comment);
    
    UPDATE requests
    SET status = 'APPROVED',
        updated_at = SYSTIMESTAMP,
        updated_by = USER
    WHERE id = p_request_id;
    
    COMMIT;
  END approve_request;

  PROCEDURE reject_request(
    p_request_id IN NUMBER,
    p_rejecter IN VARCHAR2,
    p_reason IN VARCHAR2 DEFAULT NULL
  ) IS
  BEGIN
    INSERT INTO request_steps (request_id, action, approved_by, approved_at, approval_comment)
    VALUES (p_request_id, 'REJECTED', p_rejecter, SYSTIMESTAMP, p_reason);
    
    UPDATE requests
    SET status = 'REJECTED',
        updated_at = SYSTIMESTAMP,
        updated_by = USER
    WHERE id = p_request_id;
    
    COMMIT;
  END reject_request;

  PROCEDURE get_request(p_request_id IN NUMBER, p_result OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN p_result FOR
      SELECT * FROM v_requests WHERE id = p_request_id;
  END get_request;

  PROCEDURE get_all_requests(p_result OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN p_result FOR
      SELECT * FROM v_requests;
  END get_all_requests;

END pkg_requests;
/

-- =============================================================================
-- SAMPLE DATA (for testing)
-- =============================================================================

BEGIN
  -- Insert sample requests
  INSERT INTO requests (title, type, description, department, status, salary, start_date, created_by)
  VALUES ('New Senior Research Scientist Position', 'NEW_POSITION',
          'Request for a new senior-level research scientist position in the Physics department.',
          'Physics', 'PENDING_REVIEW', '$120,000 - $150,000', TO_DATE('2025-09-01', 'YYYY-MM-DD'), 'DR_SARAH_JOHNSON');

  INSERT INTO requests (title, type, description, department, status, created_by)
  VALUES ('Faculty Promotion Request', 'PROMOTION',
          'Promotion of Dr. James Mitchell from Associate Professor to Full Professor.',
          'Engineering', 'APPROVED', 'DEAN_SARAH_WILSON');

  INSERT INTO requests (title, type, description, department, status, duration, start_date, created_by)
  VALUES ('Sabbatical Leave Request', 'SABBATICAL',
          'One-year sabbatical leave for research and publication.',
          'History', 'DRAFT', '12 months', TO_DATE('2025-06-01', 'YYYY-MM-DD'), 'PROF_EMMA_DAVIS');

  INSERT INTO requests (title, type, description, department, status, created_by)
  VALUES ('Grant Funding Coordinator Position', 'NEW_POSITION',
          'New position for grant funding coordination and compliance.',
          'Research Administration', 'REJECTED', 'ROBERT_CHEN');

  INSERT INTO requests (title, type, description, department, status, created_by)
  VALUES ('Department Chair Position', 'APPOINTMENT',
          'Appointment of Dr. Lisa Wong as new Department Chair.',
          'Computer Science', 'PENDING_REVIEW', 'PROVOST_OFFICE');

  -- Insert sample approval steps
  INSERT INTO request_steps (request_id, action, approved_by, approved_at, approval_comment)
  SELECT id, 'APPROVED', 'JOHN_SMITH_HR', SYSTIMESTAMP - 1, 'Looks good' FROM requests WHERE title = 'New Senior Research Scientist Position';

  INSERT INTO request_steps (request_id, action, approved_by, approved_at)
  SELECT id, 'APPROVED', 'JOHN_SMITH_HR', SYSTIMESTAMP - 5 FROM requests WHERE title = 'Faculty Promotion Request';

  INSERT INTO request_steps (request_id, action, approved_by, approved_at, approval_comment)
  SELECT id, 'APPROVED', 'FINANCE_DEPARTMENT', SYSTIMESTAMP - 3, NULL FROM requests WHERE title = 'Faculty Promotion Request';

  INSERT INTO request_steps (request_id, action, approved_by, approved_at, approval_comment)
  SELECT id, 'REJECTED', 'FINANCE_DEPARTMENT', SYSTIMESTAMP - 8, 'Budget constraints for Q1 2025' FROM requests WHERE title = 'Grant Funding Coordinator Position';

  COMMIT;
END;
/

-- =============================================================================
-- ORDS REST ENDPOINTS (for future API integration)
-- =============================================================================

BEGIN
  ORDS.enable_schema(
    p_enabled => TRUE,
    p_schema => USER,
    p_url_mapping_type => 'BASE_PATH',
    p_url_mapping_pattern => 'hrmvp',
    p_auto_rest_auth => FALSE
  );
  
  COMMIT;
END;
/

-- Enable requests table for REST
BEGIN
  ORDS.enable_object(
    p_schema => USER,
    p_object => 'REQUESTS',
    p_object_type => 'TABLE',
    p_object_alias => 'requests',
    p_auto_rest_auth => FALSE
  );
  
  COMMIT;
END;
/

-- =============================================================================
-- VERIFICATION
-- =============================================================================

-- Check tables created
SELECT table_name FROM user_tables WHERE table_name IN ('REQUESTS', 'REQUEST_STEPS', 'AUDIT_LOG');

-- Check sample data
SELECT COUNT(*) as total_requests FROM requests;
SELECT * FROM v_dashboard_stats;

-- Success message
PROMPT
PROMPT ========================================
PROMPT College HR System Database Setup Complete!
PROMPT ========================================
PROMPT Tables created: REQUESTS, REQUEST_STEPS, AUDIT_LOG
PROMPT Views created: V_DASHBOARD_STATS, V_REQUESTS, V_PENDING_APPROVALS, V_RECENT_ACTIVITY
PROMPT Packages created: PKG_REQUESTS
PROMPT Sample data loaded: 5 requests with approval steps
PROMPT ========================================
